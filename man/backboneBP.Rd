% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backboneBP.R
\name{backboneBP}
\alias{backboneBP}
\title{Summarize the Bootstrape Values of Backbone Nodes}
\usage{
backboneBP(trees, taxa, level = NULL, plot = TRUE)
}
\arguments{
\item{trees}{a list of objects of class "\code{phylo}".
A list of test trees such as single gene trees.}

\item{taxa}{a \code{data.frame} with tips and groupings. The first column
must be the tip names in \code{trees}. Other columns specify the
their groupings. Can have some tips left as no grouping.}

\item{level}{can be a character as one of the column names of \code{taxa},
or a numeric specifying which column is used as grouping.
Defaults as \code{NULL} and use the second column of \code{taxa}.}

\item{plot}{a logical specifying whether to generate violin plots
for bootstrape values of backbone nodes of each of the \code{trees}.}
}
\value{
the returned list contains 5 parts:
    (1) a \code{summary} table showing the quantiles and numbers
    of bp values >= 50 or 70 bp, and the score
}
\description{
This function defines backbone nodes based on \code{taxa}
and \code{level}, summarizes the boostrape supports of these nodes,
and gives the order of \code{trees} by scoring the the distribution
of the collected bp values.
}
\details{
\code{backboneBP} first finds and uses only the trees meet all constraints
    (groupings) in \code{taxa} and \code{level} to identify backbone nodes. This function
    returns a list of four: (1) \code{summary}: main result, a table contains statistics
    and scores of \code{trees} that meets all constriants; (2) \code{data}: a list of modified
    \code{trees} that meets all constraints, to have bootstrape values on backbone nodes
    and \code{NA} on other nodes; (3) \code{plot.data}: a \code{data.frame} that can be as input
    to \code{ggplot2} to produce the violin plot; (4) \code{concor.trees}: statistics of
    the number of all \code{trees} meet constraints, including those meets partial or
    no constraints (groupings). This last result can present the consistencies of
    constraints in \code{trees}.
}
\examples{
data(Brassidata)
trees <- Brassidata$trees
taxa <- Brassidata$taxaTable
ubb <- backboneBP(trees, taxa = taxa, level=2, plot = FALSE)
# returns NULL when there is no so-called "backbone nodes"
# based on the given groupings
}
